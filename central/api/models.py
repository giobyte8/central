# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-02-04T22:01:54+00:00

from __future__ import annotations

from enum import Enum
from ipaddress import IPv4Address
from pydantic import BaseModel, Field
from typing import Optional
from uuid import UUID


class HostStatus(BaseModel):
    uptime: str = Field(
        ..., description='The amount of time the system has been running.'
    )
    ip: IPv4Address = Field(..., description='External IPv4 address for the host.')


class NotifDeliverySvc(Enum):
    TELEGRAM = 'telegram'
    WEBSOCKET = 'websocket'


class NotifSubscription(BaseModel):
    id: Optional[UUID] = Field(None, description='The UUID4 of the subscription.')
    notif_delivery_svc: NotifDeliverySvc = Field(
        ..., description='Name of service that will receive notifications.'
    )
    password: str = Field(
        ...,
        description='In order to receive notifications, subscription password must\nbe provided.\n',
    )
    servicePayload: Optional[str] = Field(
        None,
        description="This is a flexible field that can be used to transfer additonal\ninfo that might be required by notif delivery service:\n\n1. `telegram`: Init data string provided by telegram to embedded\n   'mini app'.\n\n   Value must be provided as passed by telegram to mini app\n   (without any modification) for validation on backend.\n\n   See: https://core.telegram.org/bots/webapps#validating-data-received-via-the-mini-app\n\n2. `websocket`: No additional info is required\n",
    )
